{"version":3,"sources":["app.js","helpers.js"],"names":[],"mappingshnfile":"app.js","sourcesContent":["/**\n * App: As Igrejas Version Beta\n * @author Leandro Henrique Reis http://henriquereis.com\n *\n * Inspirados nas aulas de VueJs do Vedovelli vedcasts.com.br \n * Alguns m√©todos e layout foram importados das aulas\n */\nangular.module('appChurches', ['flashMessage', 'OrderService']).constant('APP', {\n    name: 'The Churches Version Beta',\n    debug: true,\n    views: '/views/',\n    path: '/'\n}).constant('API', {\n    path: '//api.asigrejas.app/v1/'\n//    path: '//api.asigrejas.com/v1/'\n}).filter('dateFormat', function() {\n    return function(value, formatString) {\n\t\tif(formatString != undefined)\n\t\t{\n\t\t    return moment(value).format(formatString);\n\t\t}\n\n\t\treturn moment(value).format('DD/MM/YYYY');\n    };\n}).controller('ChurchController', ['$rootScope', '$scope', '$http', '$filter', 'APP', 'API', 'flash', 'OrderService', ChurchController]);\n\n/**\n * Add churches\n * Add events\n * Add worhips\n * \n * Edit churches\n * Edit events\n * Edit worships\n */\nfunction ChurchController($rootScope, $scope, $http, $filter, APP, API, flash, OrderService) {\n\t/**\n\t * defaults data;\n\t */\n    var Address = function(){\n        var isObject = this instanceof Address;\n        /**\n         * Garante que seja uma instancia de Address\n         *\n         * @param  {Boolean} isObject\n         *\n         * @return new Address\n         */\n        if (isObject === false) {\n            return new Address();\n        };\n\n\n        this.number='';\n        this.city='';\n        this.district='';\n        this.street='';\n        this.hasStates=false;\n        this.hasCities=false\n        this.cities=[];\n\n    };\n\n    $scope.church = {\n        addresses: []\n    };\n\n    $scope.contacts={};\n    $scope.sendContacts=false;\n\n\t$scope.churches= {\n            all: [],\n            list: [],\n            paginated: []\n        };\n\n     $scope.pagination= {\n            perPage: 20,\n            currentPage: 1,\n            totalPages: 0,\n            totalItems: 0,\n            pageNumbers: []\n        };\n\n\t$scope.interaction= {\n            visibleColumns: {'address':true, 'city':true},\n            columnsToFilter: [],\n            filterTerm: '',\n            openComments: []\n        };\n\n    $scope.countries=[];\n    $scope.states=[];\n    $scope.address={\n        'country':'',\n        'state':''\n    };\n\n\t$scope.controls= {\n            select2: null,\n        }\n\n    $scope.errors=[];\n\n    var defaults={\n        'country': 'Brazil'\n    }\n\n\n    /**\n     * Adiciona um novo item\n     *\n     * @param  {string} path\n     * @param  {object} dados\n     * @param  {function} success\n     * @param  {function} error\n     * @param  {object} config\n     *\n     * @return success|error\n     */\n    $rootScope.post = function(path, dados, success, error, config) {\n        config = config ? config : $rootScope.getHeaders();\n        if (APP.debug) {\n            console.log(config);\n        }\n        $http.post(path, dados, config).then(function(response) {\n            if (APP.debug) {\n                console.log(response);\n            }\n\n            if (typeof success==\"function\") {\n                success(response);\n            }\n        }, function(response) {\n            if (APP.debug) {\n                console.log(response);\n            }\n\n            if (typeof error==\"function\") {\n                error(response);\n            }\n        });\n    }\n\n    $rootScope.getHeaders=function()\n    {\n        return {\n            headers: {\n                    'Content-Type': 'application/json'\n            }\n        };\n    }\n    /**\n     * Altera um item\n     *\n     * @param  {string} path\n     * @param  {object} dados\n     * @param  {function} success\n     * @param  {function} error\n     * @param  {object} config\n     *\n     * @return function\n     */\n    $rootScope.put = function(path, dados, success, error, config) {\n        config = config ? config : $rootScope.getHeaders();\n        $http.put(path, dados, config).then(function(response) {\n            if (typeof success==\"function\") {\n                success(response);\n            }\n        }, function(response) {\n            if (typeof error==\"function\") {\n                error(response);\n            }\n        });\n    }\n\n    /**\n     * Apaga um item\n     *\n     * @param  {string} path\n     * @param  {function} success\n     * @param  {function} error\n     * @param  {object} config\n     *\n     * @return function\n     */\n    $rootScope.delete = function(path, success, error, config) {\n        config = config ? config : $rootScope.getHeaders();\n        $http.delete(path, config).then(function(response) {\n            if (typeof success==\"function\") {\n                success(response);\n            }\n        }, function(response) {\n\n            if (typeof error==\"function\") {\n                error(response);\n            }\n        });\n    }\n\n    /**\n     * Pega um ou mais itens\n     *\n     * @param  {string} path\n     * @param  {function} success\n     * @param  {function} error\n     * @param  {object} config\n     *\n     * @return success|error\n     */\n    $rootScope.get = function(path, success, error, config) {\n        config = config ? config : $rootScope.getHeaders();\n        $http.get(path, config).then(function(response) {\n            if (typeof success==\"function\") {\n                success(response);\n            }\n        }, function(response) {\n\n            if (typeof error==\"function\") {\n                error(response);\n            }\n        });\n    }\n\n    $scope.churchEdit=function(data){\n    \tvar church=angular.copy(data);\n\n    }\n\n    $scope.churchSave=function(data){\n        $scope.errors=[];\n\n       \tvar church=angular.copy(data);\n    \tvar save=$http.post;\n    \tvar path=API.path+'churches/';\n\n        if (church.name==undefined) {\n            flash.warning('Informe o nome da igreja','AVISO!');\n            return false;\n        }\n\n        if (church.addresses.length<1) {\n            flash.warning('Informe pelo menos um endere√ßo','AVISO!');\n            return false;\n        }\n\n    \tif (church.id!=undefined) {\n    \t\tsave.$http.put;\n    \t\tpath+=church.id;\n    \t}\n\n    \tif (APP.debug) {\n    \t\tconsole.log(church);\n    \t\tconsole.log(path);\n    \t}\n        if (APP.debug) {\n            console.log(\"######## DADOS PARA SEREM SALVOS\");\n            console.log(church);\n        }\n        flash.confirm(function(){\n            save(path, church).then(function(response){\n                $scope.church = {\n                    addresses: []\n                };\n\n                $('.nav-tabs a[href=\"#tabIgreja\"]').tab('show');\n                jQuery(\"#modalChurches\").modal('hide');\n                $scope.addAddess();\n    //            getAll();\n                flash.success('Igreja Salva com sucesso!','Aguardando Aprova√ß√£o!');\n            }, function(response){\n                if (APP.debug) {\n                    console.log(response.data);\n                }\n                var errors=[];\n                    angular.forEach(response.data.message,function(error, key){\n                        errors.push(error);\n                    });\n                $scope.errors=errors;\n\n                flash.error('Houve uma falha ao tentar salvar a igreja, verifique se preencheu todos os dados do(s) endere√ßo(s).','ERRO!');\n            })\n\n        },'Continuar?','SALVAR DADOS','Sim','N√£o');\n    }\n\n    $scope.setPaginationData= function(list)\n        {\n            var chunk    = _.chunk(list, $scope.pagination.perPage);\n\n            $scope.churches.paginated = chunk;\n            $scope.churches.list = chunk[0];\n\n            $scope.pagination.currentPage = 1;\n            $scope.pagination.totalItems = list.length;\n            $scope.pagination.totalPages = Math.ceil(list.length / $scope.pagination.perPage);\n            $scope.pagination.pageNumbers = _.range(1, $scope.pagination.totalPages+1);\n            if (APP.debug) {\n                console.log($scope.pagination.pageNumbers);\n            }\n        };\n\n\t$scope.page= function(page)\n        {\n            var self = this;\n\n            $scope.pagination.currentPage = page;\n\n            $scope.churches.list = $scope.churches.paginated[page-1];\n        };\n\n\t$scope.next= function()\n        {\n            if($scope.pagination.currentPage == $scope.pagination.totalPages)\n            {\n                return false;\n            }\n\n            $scope.pagination.currentPage = $scope.pagination.currentPage+1;\n\n            $scope.churches.list = $scope.churches.paginated[$scope.pagination.currentPage-1];\n        };\n\n\t$scope.previous= function()\n        {\n            if($scope.pagination.currentPage == 1)\n            {\n                return false;\n            }\n\n            $scope.pagination.currentPage = $scope.pagination.currentPage-1;\n\n            $scope.churches.list = $scope.churches.paginated[$scope.pagination.currentPage-1];\n        };\n\n\n\t$scope.doResetAll= function()\n        {\n            $scope.interaction.visibleColumns = {'address':true, 'city':true};\n            $scope.interaction.columnsToFilter = [];\n            $scope.interaction.filterTerm = '';\n            $scope.interaction.openComments = [];\n\n            $scope.setPaginationData($scope.churches.all);\n\n            OrderService.reset('churches');\n\n            //$scope.controls.select2.val('').trigger('change');\n        };\n\n\t$scope.doOpenComments= function(id)\n        {\n\t\t\tvar index = $scope.interaction.openComments.indexOf(id);\n\n\t\t\t/**\n\t\t\t * trabalhar para colocar em angular isso\n\t\t\t */\n            if(index > -1)\n            {\n                $scope.interaction.openComments.splice(index,1);\n            } else {\n                $scope.interaction.openComments.push(id);\n            }\n        };\n\n\t$scope.openAllComments= function()\n        {\n            if($scope.interaction.openComments.length > 0)\n            {\n                $scope.interaction.openComments=[];\n            } else {\n                $scope.interaction.openComments= _.pluck($scope.churches.list, 'id');\n            }\n        };\n\n\tvar getAll=function()\n\t{\n\t\t$rootScope.get(API.path+'addresses', function(response){\n            if (APP.debug){\n                console.log(response.data);\n            }\n            $scope.churches.all=response.data;\n\n            $scope.setPaginationData(response.data);\n\t\t})\n\n\t}\n\n\t$scope.closeModal=function()\n\t{\n        jQuery(\"#modalChurches\").modal('hide');\n        jQuery(\"#modalContacts\").modal('hide');\n\t}\n\n\t/**\n     * Ordena objetos\n     */\n    $scope.churchOrder = function(property) {\n        var order = OrderService.get('churches', property);\n\n        $scope.churches.all=$filter('orderBy')($scope.churches.all, order);\n        $scope.setPaginationData($scope.churches.all);\n    };\n\n    /**\n     * Ordem que est√° ordenado a propriedade\n     */\n    $scope.churchByOrder = function(property) {\n        return OrderService.byOrder('churches', property);\n    };\n\n\n    $scope.controls.select2 = jQuery(\"#columnsToFilterSelect\").select2({\n        placeholder: 'Selecionar uma ou mais colunas para filtrar!'\n    }).on('change', function()\n    {\n        $scope.interaction.columnsToFilter=jQuery(\"#columnsToFilterSelect\").val();\n    });\n\n    var getCountries=function(defaultCountry, defaultState, defaultCity, address)\n    {\n        defaultCountry=defaultCountry||defaults.country;\n\n        if (APP.debug) {\n            console.log(APP.path+'countries/countries.json');\n        }\n\n        $rootScope.get(APP.path+'countries/countries.json', function(response){\n            $scope.countries=response.data;\n            if (address!=undefined) {\n                address.country=angular.copy(defaults.country);\n            }\n\n            $scope.getState(defaults.country, defaultState, defaultCity, address);\n\n            if (APP.debug) {\n                console.log(response.data);\n            }\n        });\n    }\n\n    $scope.getState=function(data, defaultState, defaultCity, address)\n    {\n        if (APP.debug) {\n            console.log(data);\n        }\n\n        var country=normalize(angular.copy(data));\n        country=country.replace(\" \",\"-\").toLowerCase();\n\n        $rootScope.get(APP.path+'countries/states/'+country+'.json', function(response){\n            $scope.states=response.data;\n            address.hasStates=true;\n            if ( typeof defaultState!=\"undefined\") {\n                if (address!=undefined) {\n                    address.state=angular.copy(defaultState);\n                }\n                $scope.getCities(defaultState, defaultCity, address);\n            }\n        },function(response){\n            address.hasStates=false;\n        });;\n    }\n\n    $scope.getCities=function(state, defaultCity, address)\n    {\n        if (APP.debug) {\n            console.log(state);\n        }\n\n        if (state==undefined || typeof state!='string') {\n            address.hasCities=false;\n            address.city='';\n\n            return false;\n        }\n\n        if (address.country!='Brazil') {\n            address.hasCities=false;\n            address.city='';\n\n            return false;\n        }\n\n        if (APP.debug) {\n            console.log(\"##### PATH #####\");\n            console.log(APP.path+'countries/cities/brazil.json');\n        }\n        $rootScope.get(APP.path+'countries/cities/brazil.json', function(response){\n            var aux=response.data;\n\n            aux=aux.filter(function(city){\n                if (city.code==state) {\n                    return city;\n                }\n            })\n\n            if (APP.debug) {\n                console.log(\"### CITIES ###\");\n                console.log(aux);\n                console.log(aux[0].cities);\n            }\n            address.cities=[];\n            var cities=[];\n            angular.forEach(aux[0].cities, function(item){\n                cities.push({\n                    'name':item\n                })\n            });\n            if (APP.debug) {\n                console.log(\"### CITIES ###\");\n                console.log(cities);\n            }            \n            address.cities=cities;\n            address.city='';\n            address.hasCities=true;\n            if ( typeof defaultCity!=\"undefined\") {\n                address.city=angular.copy(defaultCity);\n            }\n        },function(response){\n            address.hasCities=false;\n        });;\n    }\n\n    $scope.getCep=function(cep, index)\n    {\n        var address=this.address;\n        address.numberId='number'+index;\n        var aux = cep.replace(/[^0-9]+/g, \"\");\n        if (aux != undefined && aux != \"\" && aux.length == 8) {\n            $http.get('https://viacep.com.br/ws/' + aux + '/json/').then(function(response) {\n                var aux = response.data;\n                if (aux.erro == undefined) {\n                    if (APP.debug){\n                        console.log(aux);\n                    }\n                    getCountries('Brazil','BR-'+aux.uf, aux.localidade, address);\n                    address.district=aux.bairro;\n                    address.city=aux.localidade;\n                    address.street=aux.logradouro;\n                    angular.element(\"#\"+address.numberId).trigger('focus');\n                }\n            }, function(response) {\n                if (typeof error != \"undefined\") {\n                    error(response.data);\n                }\n            });\n        }\n    }\n\n    $scope.addAddess=function(selectTitle)\n    {\n        selectTitle=selectTitle || false;\n        $scope.church.addresses.push(angular.copy(new Address()));\n        if (selectTitle) {\n             setTimeout(function(){\n                $scope.showTab($scope.church.addresses.length);\n                var title='title'+$scope.church.addresses.length;\n                angular.element(\"#\"+title).trigger('focus');\n             }, 100);\n             \n        }\n    }\n\n    $scope.showTab=function(id)\n    {\n        $('.nav-tabs a[href=\"#tabEndereco'+id+'\"]').tab('show');\n    }\n\n\n    $scope.addAddess();\n\n    getCountries(defaults.country, undefined, undefined, $scope.church.addresses[0]);\n\n\n    $scope.deleteAddress=function(address)\n    {\n        var index=$scope.church.addresses.indexOf(address);\n        $scope.church.addresses.splice(index,1);\n    }\n\n    $scope.sendContact=function(contact){\n        if (contact.name==undefined || contact.name=='') {\n            flash.warning('Informe seu nome','AVISO!');\n\n            return;\n        }\n\n        if (contact.email==undefined || contact.email=='') {\n            flash.warning('Informe seu email','AVISO!');\n\n            return;\n        }\n\n        if (contact.comments==undefined || contact.comments=='') {\n            flash.warning('Diga alguma coisa','AVISO!');\n\n            return;\n        }\n\n        $scope.sendContacts=true;\n        $rootScope.post(API.path+'contacts', contact, function(response){\n            $scope.contacts={};\n            jQuery(\"#modalContacts\").modal('hide');\n            flash.success('Sua mensagem foi enviada com sucesso!','Obrigado!');\n            $scope.sendContacts=false;\n        },function(response){\n            $scope.sendContacts=false;\n            jQuery(\"#modalContacts\").modal('hide');\n            flash.error('Houve uma falha no envio de sua mensgaem, por favor verifique os dados informados');\n\n            if (APP.debug){\n                console.log(response);\n            }\n        });\n    }\n\n    $scope.edit=function(church)\n    {\n        flash.warning('Funcionalidade de edi√ß√£o ainda n√£o implementada.','N√ÉO DISPON√çVEL!');\n    }\n\n    getAll();\n}\n","\n\n/**\n * Normalise a string replacing foreign characters\n *\n * @param {String} str\n * @return {String}\n */\nvar normalize = (function () {\n    var map = {\n            \"√Ä\": \"A\",\n            \"√Å\": \"A\",\n            \"√Ç\": \"A\",\n            \"√É\": \"A\",\n            \"√Ñ\": \"A\",\n            \"√Ö\": \"A\",\n            \"√Ü\": \"AE\",\n            \"√á\": \"C\",\n            \"√à\": \"E\",\n            \"√â\": \"E\",\n            \"√ä\": \"E\",\n            \"√ã\": \"E\",\n            \"√å\": \"I\",\n            \"√ç\": \"I\",\n            \"√é\": \"I\",\n            \"√è\": \"I\",\n            \"√ê\": \"D\",\n            \"√ë\": \"N\",\n            \"√í\": \"O\",\n            \"√ì\": \"O\",\n            \"√î\": \"O\",\n            \"√ï\": \"O\",\n            \"√ñ\": \"O\",\n            \"√ò\": \"O\",\n            \"√ô\": \"U\",\n            \"√ö\": \"U\",\n            \"√õ\": \"U\",\n            \"√ú\": \"U\",\n            \"√ù\": \"Y\",\n            \"√ü\": \"s\",\n            \"√†\": \"a\",\n            \"√°\": \"a\",\n            \"√¢\": \"a\",\n            \"√£\": \"a\",\n            \"√§\": \"a\",\n            \"√•\": \"a\",\n            \"√¶\": \"ae\",\n            \"√ß\": \"c\",\n            \"√®\": \"e\",\n            \"√©\": \"e\",\n            \"√™\": \"e\",\n            \"√´\": \"e\",\n            \"√¨\": \"i\",\n            \"√≠\": \"i\",\n            \"√Æ\": \"i\",\n            \"√Ø\": \"i\",\n            \"√±\": \"n\",\n            \"√≤\": \"o\",\n            \"√≥\": \"o\",\n            \"√¥\": \"o\",\n            \"√µ\": \"o\",\n            \"√∂\": \"o\",\n            \"√∏\": \"o\",\n            \"√π\": \"u\",\n            \"√∫\": \"u\",\n            \"√ª\": \"u\",\n            \"√º\": \"u\",\n            \"√Ω\": \"y\",\n            \"√ø\": \"y\",\n            \"ƒÄ\": \"A\",\n            \"ƒÅ\": \"a\",\n            \"ƒÇ\": \"A\",\n            \"ƒÉ\": \"a\",\n            \"ƒÑ\": \"A\",\n            \"ƒÖ\": \"a\",\n            \"ƒÜ\": \"C\",\n            \"ƒá\": \"c\",\n            \"ƒà\": \"C\",\n            \"ƒâ\": \"c\",\n            \"ƒä\": \"C\",\n            \"ƒã\": \"c\",\n            \"ƒå\": \"C\",\n            \"ƒç\": \"c\",\n            \"ƒé\": \"D\",\n            \"ƒè\": \"d\",\n            \"ƒê\": \"D\",\n            \"ƒë\": \"d\",\n            \"ƒí\": \"E\",\n            \"ƒì\": \"e\",\n            \"ƒî\": \"E\",\n            \"ƒï\": \"e\",\n            \"ƒñ\": \"E\",\n            \"ƒó\": \"e\",\n            \"ƒò\": \"E\",\n            \"ƒô\": \"e\",\n            \"ƒö\": \"E\",\n            \"ƒõ\": \"e\",\n            \"ƒú\": \"G\",\n            \"ƒù\": \"g\",\n            \"ƒû\": \"G\",\n            \"ƒü\": \"g\",\n            \"ƒ†\": \"G\",\n            \"ƒ°\": \"g\",\n            \"ƒ¢\": \"G\",\n            \"ƒ£\": \"g\",\n            \"ƒ§\": \"H\",\n            \"ƒ•\": \"h\",\n            \"ƒ¶\": \"H\",\n            \"ƒß\": \"h\",\n            \"ƒ®\": \"I\",\n            \"ƒ©\": \"i\",\n            \"ƒ™\": \"I\",\n            \"ƒ´\": \"i\",\n            \"ƒ¨\": \"I\",\n            \"ƒ≠\": \"i\",\n            \"ƒÆ\": \"I\",\n            \"ƒØ\": \"i\",\n            \"ƒ∞\": \"I\",\n            \"ƒ±\": \"i\",\n            \"ƒ≤\": \"IJ\",\n            \"ƒ≥\": \"ij\",\n            \"ƒ¥\": \"J\",\n            \"ƒµ\": \"j\",\n            \"ƒ∂\": \"K\",\n            \"ƒ∑\": \"k\",\n            \"ƒπ\": \"L\",\n            \"ƒ∫\": \"l\",\n            \"ƒª\": \"L\",\n            \"ƒº\": \"l\",\n            \"ƒΩ\": \"L\",\n            \"ƒæ\": \"l\",\n            \"ƒø\": \"L\",\n            \"≈Ä\": \"l\",\n            \"≈Å\": \"l\",\n            \"≈Ç\": \"l\",\n            \"≈É\": \"N\",\n            \"≈Ñ\": \"n\",\n            \"≈Ö\": \"N\",\n            \"≈Ü\": \"n\",\n            \"≈á\": \"N\",\n            \"≈à\": \"n\",\n            \"≈â\": \"n\",\n            \"≈å\": \"O\",\n            \"≈ç\": \"o\",\n            \"≈é\": \"O\",\n            \"≈è\": \"o\",\n            \"≈ê\": \"O\",\n            \"≈ë\": \"o\",\n            \"≈í\": \"OE\",\n            \"≈ì\": \"oe\",\n            \"≈î\": \"R\",\n            \"≈ï\": \"r\",\n            \"≈ñ\": \"R\",\n            \"≈ó\": \"r\",\n            \"≈ò\": \"R\",\n            \"≈ô\": \"r\",\n            \"≈ö\": \"S\",\n            \"≈õ\": \"s\",\n            \"≈ú\": \"S\",\n            \"≈ù\": \"s\",\n            \"≈û\": \"S\",\n            \"≈ü\": \"s\",\n            \"≈†\": \"S\",\n            \"≈°\": \"s\",\n            \"≈¢\": \"T\",\n            \"≈£\": \"t\",\n            \"≈§\": \"T\",\n            \"≈•\": \"t\",\n            \"≈¶\": \"T\",\n            \"≈ß\": \"t\",\n            \"≈®\": \"U\",\n            \"≈©\": \"u\",\n            \"≈™\": \"U\",\n            \"≈´\": \"u\",\n            \"≈¨\": \"U\",\n            \"≈≠\": \"u\",\n            \"≈Æ\": \"U\",\n            \"≈Ø\": \"u\",\n            \"≈∞\": \"U\",\n            \"≈±\": \"u\",\n            \"≈≤\": \"U\",\n            \"≈≥\": \"u\",\n            \"≈¥\": \"W\",\n            \"≈µ\": \"w\",\n            \"≈∂\": \"Y\",\n            \"≈∑\": \"y\",\n            \"≈∏\": \"Y\",\n            \"≈π\": \"Z\",\n            \"≈∫\": \"z\",\n            \"≈ª\": \"Z\",\n            \"≈º\": \"z\",\n            \"≈Ω\": \"Z\",\n            \"≈æ\": \"z\",\n            \"≈ø\": \"s\",\n            \"∆í\": \"f\",\n            \"∆†\": \"O\",\n            \"∆°\": \"o\",\n            \"∆Ø\": \"U\",\n            \"∆∞\": \"u\",\n            \"«ç\": \"A\",\n            \"«é\": \"a\",\n            \"«è\": \"I\",\n            \"«ê\": \"i\",\n            \"«ë\": \"O\",\n            \"«í\": \"o\",\n            \"«ì\": \"U\",\n            \"«î\": \"u\",\n            \"«ï\": \"U\",\n            \"«ñ\": \"u\",\n            \"«ó\": \"U\",\n            \"«ò\": \"u\",\n            \"«ô\": \"U\",\n            \"«ö\": \"u\",\n            \"«õ\": \"U\",\n            \"«ú\": \"u\",\n            \"«∫\": \"A\",\n            \"«ª\": \"a\",\n            \"«º\": \"AE\",\n            \"«Ω\": \"ae\",\n            \"«æ\": \"O\",\n            \"«ø\": \"o\"\n        },\n        nonWord = /\\W/g,\n        mapping = function (c) {\n            return map[c] || c; \n        };\n\n\n    return function (str) {\n        return str.replace(nonWord, mapping);\n    };\n}());"],"sourceRoot":"/source/"}